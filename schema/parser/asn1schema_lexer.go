// Code generated from ASN1Schema.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 36, 351,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 7, 3, 80, 10, 3, 12, 3, 14, 3, 83, 11, 3, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3,
	12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3,
	15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16,
	3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3,
	17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18,
	3, 18, 3, 18, 6, 18, 166, 10, 18, 13, 18, 14, 18, 167, 3, 18, 3, 18, 3,
	18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 3,
	23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24,
	3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26,
	3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3,
	27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27,
	3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3,
	28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29,
	3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3,
	30, 6, 30, 278, 10, 30, 13, 30, 14, 30, 279, 3, 30, 3, 30, 3, 30, 3, 30,
	3, 30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 6,
	31, 296, 10, 31, 13, 31, 14, 31, 297, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31,
	3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 6,
	32, 315, 10, 32, 13, 32, 14, 32, 316, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32,
	3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 34, 6,
	34, 334, 10, 34, 13, 34, 14, 34, 335, 3, 35, 3, 35, 7, 35, 340, 10, 35,
	12, 35, 14, 35, 343, 11, 35, 3, 36, 6, 36, 346, 10, 36, 13, 36, 14, 36,
	347, 3, 36, 3, 36, 2, 2, 37, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15,
	8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17,
	35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26,
	53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35,
	71, 36, 3, 2, 6, 5, 2, 11, 12, 14, 15, 34, 34, 3, 2, 12, 12, 4, 2, 67,
	92, 99, 124, 6, 2, 47, 47, 50, 59, 67, 92, 99, 124, 2, 357, 2, 5, 3, 2,
	2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3,
	2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21,
	3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2,
	29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2,
	2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2,
	2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2,
	2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3,
	2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67,
	3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 3, 73, 3, 2, 2, 2, 5,
	75, 3, 2, 2, 2, 7, 86, 3, 2, 2, 2, 9, 90, 3, 2, 2, 2, 11, 92, 3, 2, 2,
	2, 13, 94, 3, 2, 2, 2, 15, 96, 3, 2, 2, 2, 17, 98, 3, 2, 2, 2, 19, 100,
	3, 2, 2, 2, 21, 102, 3, 2, 2, 2, 23, 104, 3, 2, 2, 2, 25, 113, 3, 2, 2,
	2, 27, 121, 3, 2, 2, 2, 29, 130, 3, 2, 2, 2, 31, 139, 3, 2, 2, 2, 33, 148,
	3, 2, 2, 2, 35, 156, 3, 2, 2, 2, 37, 172, 3, 2, 2, 2, 39, 176, 3, 2, 2,
	2, 41, 179, 3, 2, 2, 2, 43, 186, 3, 2, 2, 2, 45, 191, 3, 2, 2, 2, 47, 195,
	3, 2, 2, 2, 49, 205, 3, 2, 2, 2, 51, 215, 3, 2, 2, 2, 53, 231, 3, 2, 2,
	2, 55, 245, 3, 2, 2, 2, 57, 261, 3, 2, 2, 2, 59, 272, 3, 2, 2, 2, 61, 288,
	3, 2, 2, 2, 63, 306, 3, 2, 2, 2, 65, 329, 3, 2, 2, 2, 67, 333, 3, 2, 2,
	2, 69, 337, 3, 2, 2, 2, 71, 345, 3, 2, 2, 2, 73, 74, 9, 2, 2, 2, 74, 4,
	3, 2, 2, 2, 75, 76, 7, 47, 2, 2, 76, 77, 7, 47, 2, 2, 77, 81, 3, 2, 2,
	2, 78, 80, 10, 3, 2, 2, 79, 78, 3, 2, 2, 2, 80, 83, 3, 2, 2, 2, 81, 79,
	3, 2, 2, 2, 81, 82, 3, 2, 2, 2, 82, 84, 3, 2, 2, 2, 83, 81, 3, 2, 2, 2,
	84, 85, 8, 3, 2, 2, 85, 6, 3, 2, 2, 2, 86, 87, 7, 60, 2, 2, 87, 88, 7,
	60, 2, 2, 88, 89, 7, 63, 2, 2, 89, 8, 3, 2, 2, 2, 90, 91, 7, 125, 2, 2,
	91, 10, 3, 2, 2, 2, 92, 93, 7, 127, 2, 2, 93, 12, 3, 2, 2, 2, 94, 95, 7,
	93, 2, 2, 95, 14, 3, 2, 2, 2, 96, 97, 7, 95, 2, 2, 97, 16, 3, 2, 2, 2,
	98, 99, 7, 42, 2, 2, 99, 18, 3, 2, 2, 2, 100, 101, 7, 43, 2, 2, 101, 20,
	3, 2, 2, 2, 102, 103, 7, 46, 2, 2, 103, 22, 3, 2, 2, 2, 104, 105, 7, 85,
	2, 2, 105, 106, 7, 71, 2, 2, 106, 107, 7, 83, 2, 2, 107, 108, 7, 87, 2,
	2, 108, 109, 7, 71, 2, 2, 109, 110, 7, 80, 2, 2, 110, 111, 7, 69, 2, 2,
	111, 112, 7, 71, 2, 2, 112, 24, 3, 2, 2, 2, 113, 114, 7, 75, 2, 2, 114,
	115, 7, 80, 2, 2, 115, 116, 7, 86, 2, 2, 116, 117, 7, 71, 2, 2, 117, 118,
	7, 73, 2, 2, 118, 119, 7, 71, 2, 2, 119, 120, 7, 84, 2, 2, 120, 26, 3,
	2, 2, 2, 121, 122, 7, 75, 2, 2, 122, 123, 7, 79, 2, 2, 123, 124, 7, 82,
	2, 2, 124, 125, 7, 78, 2, 2, 125, 126, 7, 75, 2, 2, 126, 127, 7, 69, 2,
	2, 127, 128, 7, 75, 2, 2, 128, 129, 7, 86, 2, 2, 129, 28, 3, 2, 2, 2, 130,
	131, 7, 71, 2, 2, 131, 132, 7, 90, 2, 2, 132, 133, 7, 82, 2, 2, 133, 134,
	7, 78, 2, 2, 134, 135, 7, 75, 2, 2, 135, 136, 7, 69, 2, 2, 136, 137, 7,
	75, 2, 2, 137, 138, 7, 86, 2, 2, 138, 30, 3, 2, 2, 2, 139, 140, 7, 81,
	2, 2, 140, 141, 7, 82, 2, 2, 141, 142, 7, 86, 2, 2, 142, 143, 7, 75, 2,
	2, 143, 144, 7, 81, 2, 2, 144, 145, 7, 80, 2, 2, 145, 146, 7, 67, 2, 2,
	146, 147, 7, 78, 2, 2, 147, 32, 3, 2, 2, 2, 148, 149, 7, 70, 2, 2, 149,
	150, 7, 71, 2, 2, 150, 151, 7, 72, 2, 2, 151, 152, 7, 67, 2, 2, 152, 153,
	7, 87, 2, 2, 153, 154, 7, 78, 2, 2, 154, 155, 7, 86, 2, 2, 155, 34, 3,
	2, 2, 2, 156, 157, 7, 70, 2, 2, 157, 158, 7, 71, 2, 2, 158, 159, 7, 72,
	2, 2, 159, 160, 7, 75, 2, 2, 160, 161, 7, 80, 2, 2, 161, 162, 7, 71, 2,
	2, 162, 163, 7, 70, 2, 2, 163, 165, 3, 2, 2, 2, 164, 166, 5, 3, 2, 2, 165,
	164, 3, 2, 2, 2, 166, 167, 3, 2, 2, 2, 167, 165, 3, 2, 2, 2, 167, 168,
	3, 2, 2, 2, 168, 169, 3, 2, 2, 2, 169, 170, 7, 68, 2, 2, 170, 171, 7, 91,
	2, 2, 171, 36, 3, 2, 2, 2, 172, 173, 7, 67, 2, 2, 173, 174, 7, 80, 2, 2,
	174, 175, 7, 91, 2, 2, 175, 38, 3, 2, 2, 2, 176, 177, 7, 81, 2, 2, 177,
	178, 7, 72, 2, 2, 178, 40, 3, 2, 2, 2, 179, 180, 7, 69, 2, 2, 180, 181,
	7, 74, 2, 2, 181, 182, 7, 81, 2, 2, 182, 183, 7, 75, 2, 2, 183, 184, 7,
	69, 2, 2, 184, 185, 7, 71, 2, 2, 185, 42, 3, 2, 2, 2, 186, 187, 7, 85,
	2, 2, 187, 188, 7, 75, 2, 2, 188, 189, 7, 92, 2, 2, 189, 190, 7, 71, 2,
	2, 190, 44, 3, 2, 2, 2, 191, 192, 7, 79, 2, 2, 192, 193, 7, 67, 2, 2, 193,
	194, 7, 90, 2, 2, 194, 46, 3, 2, 2, 2, 195, 196, 7, 68, 2, 2, 196, 197,
	7, 79, 2, 2, 197, 198, 7, 82, 2, 2, 198, 199, 7, 85, 2, 2, 199, 200, 7,
	118, 2, 2, 200, 201, 7, 116, 2, 2, 201, 202, 7, 107, 2, 2, 202, 203, 7,
	112, 2, 2, 203, 204, 7, 105, 2, 2, 204, 48, 3, 2, 2, 2, 205, 206, 7, 75,
	2, 2, 206, 207, 7, 67, 2, 2, 207, 208, 7, 55, 2, 2, 208, 209, 7, 85, 2,
	2, 209, 210, 7, 118, 2, 2, 210, 211, 7, 116, 2, 2, 211, 212, 7, 107, 2,
	2, 212, 213, 7, 112, 2, 2, 213, 214, 7, 105, 2, 2, 214, 50, 3, 2, 2, 2,
	215, 216, 7, 82, 2, 2, 216, 217, 7, 116, 2, 2, 217, 218, 7, 107, 2, 2,
	218, 219, 7, 112, 2, 2, 219, 220, 7, 118, 2, 2, 220, 221, 7, 99, 2, 2,
	221, 222, 7, 100, 2, 2, 222, 223, 7, 110, 2, 2, 223, 224, 7, 103, 2, 2,
	224, 225, 7, 85, 2, 2, 225, 226, 7, 118, 2, 2, 226, 227, 7, 116, 2, 2,
	227, 228, 7, 107, 2, 2, 228, 229, 7, 112, 2, 2, 229, 230, 7, 105, 2, 2,
	230, 52, 3, 2, 2, 2, 231, 232, 7, 86, 2, 2, 232, 233, 7, 103, 2, 2, 233,
	234, 7, 110, 2, 2, 234, 235, 7, 103, 2, 2, 235, 236, 7, 118, 2, 2, 236,
	237, 7, 103, 2, 2, 237, 238, 7, 122, 2, 2, 238, 239, 7, 85, 2, 2, 239,
	240, 7, 118, 2, 2, 240, 241, 7, 116, 2, 2, 241, 242, 7, 107, 2, 2, 242,
	243, 7, 112, 2, 2, 243, 244, 7, 105, 2, 2, 244, 54, 3, 2, 2, 2, 245, 246,
	7, 87, 2, 2, 246, 247, 7, 112, 2, 2, 247, 248, 7, 107, 2, 2, 248, 249,
	7, 120, 2, 2, 249, 250, 7, 103, 2, 2, 250, 251, 7, 116, 2, 2, 251, 252,
	7, 117, 2, 2, 252, 253, 7, 99, 2, 2, 253, 254, 7, 110, 2, 2, 254, 255,
	7, 85, 2, 2, 255, 256, 7, 118, 2, 2, 256, 257, 7, 116, 2, 2, 257, 258,
	7, 107, 2, 2, 258, 259, 7, 112, 2, 2, 259, 260, 7, 105, 2, 2, 260, 56,
	3, 2, 2, 2, 261, 262, 7, 87, 2, 2, 262, 263, 7, 86, 2, 2, 263, 264, 7,
	72, 2, 2, 264, 265, 7, 58, 2, 2, 265, 266, 7, 85, 2, 2, 266, 267, 7, 118,
	2, 2, 267, 268, 7, 116, 2, 2, 268, 269, 7, 107, 2, 2, 269, 270, 7, 112,
	2, 2, 270, 271, 7, 105, 2, 2, 271, 58, 3, 2, 2, 2, 272, 273, 7, 68, 2,
	2, 273, 274, 7, 75, 2, 2, 274, 275, 7, 86, 2, 2, 275, 277, 3, 2, 2, 2,
	276, 278, 5, 3, 2, 2, 277, 276, 3, 2, 2, 2, 278, 279, 3, 2, 2, 2, 279,
	277, 3, 2, 2, 2, 279, 280, 3, 2, 2, 2, 280, 281, 3, 2, 2, 2, 281, 282,
	7, 85, 2, 2, 282, 283, 7, 86, 2, 2, 283, 284, 7, 84, 2, 2, 284, 285, 7,
	75, 2, 2, 285, 286, 7, 80, 2, 2, 286, 287, 7, 73, 2, 2, 287, 60, 3, 2,
	2, 2, 288, 289, 7, 81, 2, 2, 289, 290, 7, 69, 2, 2, 290, 291, 7, 86, 2,
	2, 291, 292, 7, 71, 2, 2, 292, 293, 7, 86, 2, 2, 293, 295, 3, 2, 2, 2,
	294, 296, 5, 3, 2, 2, 295, 294, 3, 2, 2, 2, 296, 297, 3, 2, 2, 2, 297,
	295, 3, 2, 2, 2, 297, 298, 3, 2, 2, 2, 298, 299, 3, 2, 2, 2, 299, 300,
	7, 85, 2, 2, 300, 301, 7, 86, 2, 2, 301, 302, 7, 84, 2, 2, 302, 303, 7,
	75, 2, 2, 303, 304, 7, 80, 2, 2, 304, 305, 7, 73, 2, 2, 305, 62, 3, 2,
	2, 2, 306, 307, 7, 81, 2, 2, 307, 308, 7, 68, 2, 2, 308, 309, 7, 76, 2,
	2, 309, 310, 7, 71, 2, 2, 310, 311, 7, 69, 2, 2, 311, 312, 7, 86, 2, 2,
	312, 314, 3, 2, 2, 2, 313, 315, 5, 3, 2, 2, 314, 313, 3, 2, 2, 2, 315,
	316, 3, 2, 2, 2, 316, 314, 3, 2, 2, 2, 316, 317, 3, 2, 2, 2, 317, 318,
	3, 2, 2, 2, 318, 319, 7, 75, 2, 2, 319, 320, 7, 70, 2, 2, 320, 321, 7,
	71, 2, 2, 321, 322, 7, 80, 2, 2, 322, 323, 7, 86, 2, 2, 323, 324, 7, 75,
	2, 2, 324, 325, 7, 72, 2, 2, 325, 326, 7, 75, 2, 2, 326, 327, 7, 71, 2,
	2, 327, 328, 7, 84, 2, 2, 328, 64, 3, 2, 2, 2, 329, 330, 7, 48, 2, 2, 330,
	331, 7, 48, 2, 2, 331, 66, 3, 2, 2, 2, 332, 334, 4, 50, 59, 2, 333, 332,
	3, 2, 2, 2, 334, 335, 3, 2, 2, 2, 335, 333, 3, 2, 2, 2, 335, 336, 3, 2,
	2, 2, 336, 68, 3, 2, 2, 2, 337, 341, 9, 4, 2, 2, 338, 340, 9, 5, 2, 2,
	339, 338, 3, 2, 2, 2, 340, 343, 3, 2, 2, 2, 341, 339, 3, 2, 2, 2, 341,
	342, 3, 2, 2, 2, 342, 70, 3, 2, 2, 2, 343, 341, 3, 2, 2, 2, 344, 346, 5,
	3, 2, 2, 345, 344, 3, 2, 2, 2, 346, 347, 3, 2, 2, 2, 347, 345, 3, 2, 2,
	2, 347, 348, 3, 2, 2, 2, 348, 349, 3, 2, 2, 2, 349, 350, 8, 36, 2, 2, 350,
	72, 3, 2, 2, 2, 11, 2, 81, 167, 279, 297, 316, 335, 341, 347, 3, 8, 2,
	2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "'::='", "'{'", "'}'", "'['", "']'", "'('", "')'", "','", "'SEQUENCE'",
	"'INTEGER'", "'IMPLICIT'", "'EXPLICIT'", "'OPTIONAL'", "'DEFAULT'", "",
	"'ANY'", "'OF'", "'CHOICE'", "'SIZE'", "'MAX'", "'BMPString'", "'IA5String'",
	"'PrintableString'", "'TeletexString'", "'UniversalString'", "'UTF8String'",
	"", "", "", "'..'",
}

var lexerSymbolicNames = []string{
	"", "COMMENT", "ASSIGN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "LPAREN",
	"RPAREN", "COMMA", "SEQUENCE_LITERAL", "INTEGER_LITERAL", "IMPLICIT_LITERAL",
	"EXPLICIT_LITERAL", "OPTIONAL_LITERAL", "DEFAULT_LITERAL", "DEFINED_BY_LITERAL",
	"ANY_LITERAL", "OF_LITERAL", "CHOICE_LITERAL", "SIZE_LITERAL", "MAX", "BMPSTRING_LITERAL",
	"IA5STRING_LITERAL", "PRINTABLE_STRING_LITERAL", "TELETEX_STRING_LITERAL",
	"UNIVERSAL_STRING_LITERAL", "UTF8_STRING_LITERAL", "BIT_STRING_LITERAL",
	"OCTET_STRING_LITERAL", "OBJECT_IDENTIFIER_LITERAL", "DOTDOT", "INTEGER",
	"WORD", "WHITESPACE",
}

var lexerRuleNames = []string{
	"SPACE", "COMMENT", "ASSIGN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET",
	"LPAREN", "RPAREN", "COMMA", "SEQUENCE_LITERAL", "INTEGER_LITERAL", "IMPLICIT_LITERAL",
	"EXPLICIT_LITERAL", "OPTIONAL_LITERAL", "DEFAULT_LITERAL", "DEFINED_BY_LITERAL",
	"ANY_LITERAL", "OF_LITERAL", "CHOICE_LITERAL", "SIZE_LITERAL", "MAX", "BMPSTRING_LITERAL",
	"IA5STRING_LITERAL", "PRINTABLE_STRING_LITERAL", "TELETEX_STRING_LITERAL",
	"UNIVERSAL_STRING_LITERAL", "UTF8_STRING_LITERAL", "BIT_STRING_LITERAL",
	"OCTET_STRING_LITERAL", "OBJECT_IDENTIFIER_LITERAL", "DOTDOT", "INTEGER",
	"WORD", "WHITESPACE",
}

type ASN1SchemaLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewASN1SchemaLexer(input antlr.CharStream) *ASN1SchemaLexer {

	l := new(ASN1SchemaLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ASN1Schema.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ASN1SchemaLexer tokens.
const (
	ASN1SchemaLexerCOMMENT                   = 1
	ASN1SchemaLexerASSIGN                    = 2
	ASN1SchemaLexerLBRACE                    = 3
	ASN1SchemaLexerRBRACE                    = 4
	ASN1SchemaLexerLBRACKET                  = 5
	ASN1SchemaLexerRBRACKET                  = 6
	ASN1SchemaLexerLPAREN                    = 7
	ASN1SchemaLexerRPAREN                    = 8
	ASN1SchemaLexerCOMMA                     = 9
	ASN1SchemaLexerSEQUENCE_LITERAL          = 10
	ASN1SchemaLexerINTEGER_LITERAL           = 11
	ASN1SchemaLexerIMPLICIT_LITERAL          = 12
	ASN1SchemaLexerEXPLICIT_LITERAL          = 13
	ASN1SchemaLexerOPTIONAL_LITERAL          = 14
	ASN1SchemaLexerDEFAULT_LITERAL           = 15
	ASN1SchemaLexerDEFINED_BY_LITERAL        = 16
	ASN1SchemaLexerANY_LITERAL               = 17
	ASN1SchemaLexerOF_LITERAL                = 18
	ASN1SchemaLexerCHOICE_LITERAL            = 19
	ASN1SchemaLexerSIZE_LITERAL              = 20
	ASN1SchemaLexerMAX                       = 21
	ASN1SchemaLexerBMPSTRING_LITERAL         = 22
	ASN1SchemaLexerIA5STRING_LITERAL         = 23
	ASN1SchemaLexerPRINTABLE_STRING_LITERAL  = 24
	ASN1SchemaLexerTELETEX_STRING_LITERAL    = 25
	ASN1SchemaLexerUNIVERSAL_STRING_LITERAL  = 26
	ASN1SchemaLexerUTF8_STRING_LITERAL       = 27
	ASN1SchemaLexerBIT_STRING_LITERAL        = 28
	ASN1SchemaLexerOCTET_STRING_LITERAL      = 29
	ASN1SchemaLexerOBJECT_IDENTIFIER_LITERAL = 30
	ASN1SchemaLexerDOTDOT                    = 31
	ASN1SchemaLexerINTEGER                   = 32
	ASN1SchemaLexerWORD                      = 33
	ASN1SchemaLexerWHITESPACE                = 34
)
